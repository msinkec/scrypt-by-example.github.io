// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`it renders 1`] = `
<Example
  description="Basic types in sCrypt"
  html="<p>sCrypt supports the following basic types:</p>
<ul>
<li><code>bool</code> - a boolean value <code>true</code> or <code>false</code>,</li>
<li><code>int</code> - a signed integer of arbitrary length, whose literals are in decimal or hexadecimal format:<pre><code class=\\"language-javascript\\">int a1 = <span class=\\"hljs-number\\">42</span>;
int a2 = -<span class=\\"hljs-number\\">4242424242424242</span>;
int a3 = <span class=\\"hljs-number\\">55066263022277343669578718895168534326250603453777594175500187360389116729240</span>;
int a4 = <span class=\\"hljs-number\\">0xFF8C</span>;
int a5 = <span class=\\"hljs-number\\">0xff8c</span>;
</code></pre>
</li>
<li><code>bytes</code> -  a variable length array of bytes, whose literals are in quoted hexadecimal format prefixed by <code>b</code>:<pre><code class=\\"language-javascript\\">bytes b1 = b<span class=\\"hljs-string\\">&#x27;ffee1234&#x27;</span>;
bytes b2 = b<span class=\\"hljs-string\\">&#x27;414136d08c5ed2bf3ba048afe6dcaebafeffffffffffffffffffffffffffffff00&#x27;</span>;
bytes b3 = b<span class=\\"hljs-string\\">&#x27;1122&#x27;</span> + b<span class=\\"hljs-string\\">&#x27;eeff&#x27;</span>; <span class=\\"hljs-comment\\">// b3 is b&#x27;1122eeff&#x27;</span>
</code></pre>
</li>
</ul>
<h2 id=\\"domain-subtypes\\">Domain subtypes</h2>
<p>sCrypt has several subtypes, specific to the Bitcoin context, used to further improve type safety.</p>
<h3 id=\\"subtypes-of-bytes\\">Subtypes of <code>bytes</code></h3>
<ul>
<li><p><code>PubKey</code> - an EC public key in compressed format (33 bytes):</p>
<pre><code class=\\"language-javascript\\"><span class=\\"hljs-title class_\\">PubKey</span> pubKey = <span class=\\"hljs-title class_\\">PubKey</span>(b<span class=\\"hljs-string\\">&#x27;0200112233445566778899aabbccddeeffffeeddccbbaa99887766554433221100&#x27;</span>);
</code></pre>
</li>
<li><p><code>Sig</code> - an EC signature in DER format with SIGHASH flag appended at the end (0x41 - in the below example, which means <code>SIGHASH_ALL | SIGHASH_FORKID</code>):</p>
<pre><code class=\\"language-javascript\\"><span class=\\"hljs-title class_\\">Sig</span> sig = <span class=\\"hljs-title class_\\">Sig</span>(b<span class=\\"hljs-string\\">&#x27;3045022100b71be3f1dc001e0a1ad65ed84e7a5a0bfe48325f2146ca1d677cf15e96e8b80302206d74605e8234eae3d4980fcd7b2fdc1c5b9374f0ce71dea38707fccdbd28cf7e41&#x27;</span>);
</code></pre>
</li>
<li><p><code>Ripemd160</code> - a RIPEMD-160 hash type:</p>
<pre><code class=\\"language-javascript\\"><span class=\\"hljs-title class_\\">Ripemd160</span> r = <span class=\\"hljs-title class_\\">Ripemd160</span>(b<span class=\\"hljs-string\\">&#x27;0011223344556677889999887766554433221100&#x27;</span>);
</code></pre>
</li>
<li><p><code>Sha1</code> - a SHA-1 hash type:</p>
<pre><code class=\\"language-javascript\\"><span class=\\"hljs-title class_\\">Sha1</span> s = <span class=\\"hljs-title class_\\">Sha1</span>(b<span class=\\"hljs-string\\">&#x27;0011223344556677889999887766554433221100&#x27;</span>);
</code></pre>
</li>
<li><p><code>Sha256</code> - a SHA-256 hash type:</p>
<pre><code class=\\"language-javascript\\"><span class=\\"hljs-title class_\\">Sha256</span> s = <span class=\\"hljs-title class_\\">Sha256</span>(b<span class=\\"hljs-string\\">&#x27;00112233445566778899aabbccddeeffffeeddccbbaa99887766554433221100&#x27;</span>);
</code></pre>
</li>
<li><p><code>SigHashType</code> - a sighash type / flag.</p>
<pre><code class=\\"language-javascript\\"><span class=\\"hljs-title class_\\">SigHashType</span> s = <span class=\\"hljs-title class_\\">SigHashType</span>(b<span class=\\"hljs-string\\">&#x27;01&#x27;</span>);
<span class=\\"hljs-title class_\\">SigHashType</span> s = <span class=\\"hljs-title class_\\">SigHash</span>.<span class=\\"hljs-property\\">ALL</span> | <span class=\\"hljs-title class_\\">SigHash</span>.<span class=\\"hljs-property\\">ANYONECANPAY</span>;
</code></pre>
</li>
<li><p><code>SigHashPreimage</code> - a sighash preimage.</p>
<pre><code class=\\"language-javascript\\"><span class=\\"hljs-title class_\\">SigHashType</span> s = <span class=\\"hljs-title class_\\">SigHashType</span>(b<span class=\\"hljs-string\\">&#x27;01&#x27;</span>);
<span class=\\"hljs-title class_\\">SigHashType</span> s = <span class=\\"hljs-title class_\\">SigHash</span>.<span class=\\"hljs-property\\">ALL</span> | <span class=\\"hljs-title class_\\">SigHash</span>.<span class=\\"hljs-property\\">ANYONECANPAY</span>;
</code></pre>
</li>
</ul>
<h3 id=\\"subtypes-of-int\\">Subtypes of <code>int</code></h3>
<ul>
<li><code>PrivKey</code> - an EC private key.<pre><code class=\\"language-javascript\\"><span class=\\"hljs-title class_\\">SigHashType</span> s = <span class=\\"hljs-title class_\\">SigHashType</span>(b<span class=\\"hljs-string\\">&#x27;01&#x27;</span>);
<span class=\\"hljs-title class_\\">SigHashType</span> s = <span class=\\"hljs-title class_\\">SigHash</span>.<span class=\\"hljs-property\\">ALL</span> | <span class=\\"hljs-title class_\\">SigHash</span>.<span class=\\"hljs-property\\">ANYONECANPAY</span>;
</code></pre>
</li>
</ul>
"
  title="Basic Types"
  version="0.1.0"
/>
`;
